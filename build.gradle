buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    // MapStruct
    id 'net.ltgt.apt' version '0.19'
}

// Java Project
apply plugin: 'java'
// Spock Framework
apply plugin: 'groovy'
// IDEs compatibility
apply plugin: 'idea'
apply plugin: 'eclipse'
// MapStruct IDEs compatibility
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'
// Spring Boot Project
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.kiesoft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    // Source and Resource Directories of Integration Tests
    integrationTest {
        java {
            compileClasspath += sourceSets.main.output + configurations.testRuntime
            runtimeClasspath += output + compileClasspath
            srcDirs = ['src/integrationTest/java']
        }
        groovy {
            compileClasspath += sourceSets.main.output + configurations.testRuntime
            runtimeClasspath += output + compileClasspath
            srcDirs = ['src/integrationTest/groovy']
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
}

dependencies {
    // Spring
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//    implementation("org.springframework.security:spring-security-jwt")

    // Databases
    implementation('org.postgresql:postgresql:42.2.5')
    implementation('org.hibernate:hibernate-hikaricp:5.3.7.Final')

    // Tools
    implementation('org.apache.commons:commons-lang3:3.0')
    implementation('commons-codec:commons-codec:1.11')
    implementation("commons-validator:commons-validator:1.6")

    // Mapper
    implementation('org.mapstruct:mapstruct:1.2.0.Final')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.2.0.Final')

    // XSS
    implementation('com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20181114.1')

    // Testing
    testAnnotationProcessor('org.mapstruct:mapstruct-processor:1.2.0.Final')

    // Unit Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.codehaus.groovy:groovy-all:2.5.4')
    testImplementation('org.spockframework:spock-core:1.2-groovy-2.5')

    // Integration Test
    integrationTestImplementation('org.springframework.boot:spring-boot-starter-test')
    integrationTestImplementation('org.codehaus.groovy:groovy-all:2.5.4')
    integrationTestImplementation('org.spockframework:spock-core:1.2-groovy-2.5')
    integrationTestImplementation('org.spockframework:spock-spring:1.2-groovy-2.5')
    integrationTestImplementation('org.xerial:sqlite-jdbc:3.8.11.2')
    integrationTestImplementation('com.h2database:h2:1.4.197')
}

// Task to run the IntegrationTest
task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    
    // Integration test are always out of date, so they will alway run even if there are no changes
    outputs.upToDateWhen { false }

    mustRunAfter test
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
